{"version":3,"file":"zoom.js","mappings":"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","sources":["webpack://wkode/./js/modules/zoom/jquery.exzoom.js","webpack://wkode/webpack/bootstrap","webpack://wkode/webpack/runtime/compat get default export","webpack://wkode/webpack/runtime/define property getters","webpack://wkode/webpack/runtime/hasOwnProperty shorthand","webpack://wkode/./js/modules/zoom.js"],"sourcesContent":["(function ($, window) {\n  let ele = null,\n    exzoom_img_box = null,\n    boxWidth = null,\n    boxHeight = null,\n    exzoom_img_ul_outer = null, //用于限制 ul 宽度,又不影响放大镜区域\n    exzoom_img_ul = null,\n    exzoom_img_ul_position = 0, //循环图片区域的边距,用于移动时跟随光标\n    exzoom_img_ul_width = 0, //循环图片区域的最大宽度\n    exzoom_img_ul_max_margin = 0, //循环图片区域的最大外边距,应该是图片数量减一乘以boxWidth\n    exzoom_nav = null,\n    exzoom_nav_inner = null,\n    navHightClass = \"current\", //当前图片的类,\n    exzoom_navSpan = null,\n    navHeightWithBorder = null,\n    images = null,\n    exzoom_prev_btn = null, //导航上一张图片\n    exzoom_next_btn = null, //导航下一张图片\n    imgNum = 0, //图片的数量\n    imgIndex = 0, //当前图片的索引\n    imgArr = [], //图片属性的数字\n    exzoom_zoom = null,\n    exzoom_main_img = null,\n    exzoom_zoom_outer = null,\n    exzoom_preview = null, //预览区域\n    exzoom_preview_img = null, //预览区域的图片\n    autoPlayInterval = null, //用于控制自动播放的间隔时间\n    startX = 0, //移动光标的起始坐标\n    startY = 0, //移动光标的起始坐标\n    endX = 0, //移动光标的终止坐标\n    endY = 0, //移动光标的终止坐标\n    g = {}, //全局变量\n    defaults = {\n      navWidth: 120, //列表每个宽度,该版本中请把宽高填写成一样\n      navHeight: 120, //列表每个高度,该版本中请把宽高填写成一样\n      navItemNum: 5, //列表显示个数\n      navItemMargin: 7, //列表间隔\n      navBorder: 1, //列表边框，没有边框填写0，边框在css中修改\n      autoPlay: true, //是否自动播放\n      autoPlayTimeout: 3000, //播放间隔时间\n    };\n\n  let methods = {\n    init: function (options) {\n      let opts = $.extend({}, defaults, options);\n\n      ele = this;\n      exzoom_img_box = ele.find(\".exzoom_img_box\");\n      exzoom_img_ul = ele.find(\".exzoom_img_ul\");\n      exzoom_nav = ele.find(\".exzoom_nav\");\n      exzoom_prev_btn = ele.find(\".exzoom_prev_btn\"); //缩略图导航上一张按钮\n      exzoom_next_btn = ele.find(\".exzoom_next_btn\"); //缩略图导航下一张按钮\n\n      //todo 以后可以分开宽度和高度的限制\n      boxHeight = boxWidth = ele.outerWidth(); //在小屏幕中,有 padding 的情况下,计算不准,需要手动指定 ele 的宽度\n\n      // console.log(\"boxWidth::\" + boxWidth);\n      // console.log(\"ele.parent().width()::\" + ele.parent().width());\n      // console.log(\"ele.parent().outerWidth()::\" + ele.parent().outerWidth());\n      // console.log(\"ele.parent().innerWidth()::\" + ele.parent().innerWidth());\n\n      //todo 缩略图导航的高度和宽度可以改为根据 导航栏宽度 和 navItemNum 计算出来,但是对于不同尺寸的不好处理\n      g.navWidth = opts.navWidth;\n      g.navHeight = opts.navHeight;\n      g.navBorder = opts.navBorder;\n      g.navItemMargin = opts.navItemMargin;\n      g.navItemNum = opts.navItemNum;\n      g.autoPlay = opts.autoPlay;\n      g.autoPlayTimeout = opts.autoPlayTimeout;\n\n      images = exzoom_img_box.find(\"img\");\n      imgNum = images.length; //图片的数量\n      checkLoadedAllImages(images); //检查图片是否健在完成,全部加载完成的会执行初始化\n    },\n    prev: function () {\n      //上一张图片\n      moveLeft();\n    },\n    next: function () {\n      //下一张图片\n      moveRight();\n    },\n    setImg: function () {\n      //设置大图\n      let url = arguments[0];\n\n      getImageSize(url, function (width, height) {\n        exzoom_preview_img.attr(\"src\", url);\n        exzoom_main_img.attr(\"src\", url);\n\n        //todo 未测试\n        //判断已有的图片数量是否合最初的一致,不是的话就先删除最后一个\n        if (exzoom_img_ul.find(\"li\").length === imgNum + 1) {\n          exzoom_img_ul.find(\"li:last\").remove();\n        }\n        exzoom_img_ul.append(\n          '<li style=\"width: ' +\n            boxWidth +\n            'px;\">' +\n            '<img src=\"' +\n            url +\n            '\"></li>'\n        );\n\n        let image_prop = copute_image_prop(url, width, height);\n        previewImg(image_prop);\n      });\n    },\n  };\n\n  $.fn.extend({\n    exzoom: function (method, options) {\n      if (arguments.length === 0 || (typeof method === \"object\" && !options)) {\n        if (this.length === 0) {\n          // alert(\"调用 jQuery.exzomm 时的选择器为空\");\n          $.error(\"Selector is empty when call jQuery.exzomm\");\n        } else {\n          return methods.init.apply(this, arguments);\n        }\n      } else if (methods[method]) {\n        return methods[method].apply(\n          this,\n          Array.prototype.slice.call(arguments, 1)\n        );\n      } else {\n        // alert(\"调用了 jQuery.exzomm 中不存在的方法\");\n        $.error(\"Method \" + method + \"does not exist on jQuery.exzomm\");\n      }\n    },\n  });\n\n  /**\n   * 初始化\n   */\n  function init() {\n    exzoom_img_box.append(\"<div class='exzoom_img_ul_outer'></div>\");\n    exzoom_nav.append(\"<p class='exzoom_nav_inner'></p>\");\n    exzoom_img_ul_outer = exzoom_img_box.find(\".exzoom_img_ul_outer\");\n    exzoom_nav_inner = exzoom_nav.find(\".exzoom_nav_inner\");\n\n    //把 exzoom_img_ul 移动到 exzoom_img_ul_outer 里\n    exzoom_img_ul_outer.append(exzoom_img_ul);\n\n    //循环所有图片,计算尺寸,添加缩略图导航\n    for (let i = 0; i < imgNum; i++) {\n      imgArr[i] = copute_image_prop(images.eq(i)); //记录图片的尺寸属性等\n      console.log(imgArr[i]);\n      let li = exzoom_img_ul.find(\"li\").eq(i);\n      li.css(\"width\", boxWidth); //设置图片上级的 li 元素的宽度\n      li.find(\"img\").css({\n        \"margin-top\": imgArr[i][5],\n        width: imgArr[i][3],\n      });\n    }\n\n    //缩略图导航\n    exzoom_navSpan = exzoom_nav.find(\"span\");\n    navHeightWithBorder = g.navBorder * 2 + g.navHeight;\n    g.exzoom_navWidth = (navHeightWithBorder + g.navItemMargin) * g.navItemNum;\n    g.exzoom_nav_innerWidth = (navHeightWithBorder + g.navItemMargin) * imgNum;\n\n    exzoom_navSpan.eq(imgIndex).addClass(navHightClass);\n    exzoom_nav.css({\n      height: navHeightWithBorder + \"px\",\n      width: boxWidth - exzoom_prev_btn.width() - exzoom_next_btn.width(),\n    });\n    exzoom_nav_inner.css({\n      width: g.exzoom_nav_innerWidth + \"px\",\n    });\n    exzoom_navSpan.css({\n      \"margin-left\": g.navItemMargin + \"px\",\n      width: g.navWidth + \"px\",\n      height: g.navHeight + \"px\",\n    });\n\n    //设置滚动区域的宽度\n    exzoom_img_ul_width = boxWidth * imgNum;\n    exzoom_img_ul_max_margin = boxWidth * (imgNum - 1);\n    exzoom_img_ul.css(\"width\", exzoom_img_ul_width);\n    //添加放大镜\n    exzoom_img_box.append(`\n<div class='exzoom_zoom_outer'>\n    <span class='exzoom_zoom'></span>\n</div>\n<p class='exzoom_preview'>\n    <img class='exzoom_preview_img' src='' />\n</p>\n            `);\n    exzoom_zoom = exzoom_img_box.find(\".exzoom_zoom\");\n    exzoom_main_img = exzoom_img_box.find(\".exzoom_main_img\");\n    exzoom_zoom_outer = exzoom_img_box.find(\".exzoom_zoom_outer\");\n    exzoom_preview = exzoom_img_box.find(\".exzoom_preview\");\n    exzoom_preview_img = exzoom_img_box.find(\".exzoom_preview_img\");\n\n    //设置大图和预览图区域\n    exzoom_img_box.css({\n      width: boxHeight + \"px\",\n      height: boxHeight + \"px\",\n    });\n\n    exzoom_img_ul_outer.css({\n      width: boxHeight + \"px\",\n      height: boxHeight + \"px\",\n    });\n\n    exzoom_preview.css({\n      width: boxHeight + \"px\",\n      height: boxHeight + \"px\",\n      left: boxHeight + 5 + \"px\", //添加个边距\n    });\n\n    previewImg(imgArr[imgIndex]);\n    autoPlay(); //自动播放\n    bindingEvent(); //绑定事件\n  }\n\n  /**\n   * 检测图片是否加载完成\n   * @param images\n   */\n  function checkLoadedAllImages(images) {\n    let timer = setInterval(function () {\n      let loaded_images_counter = 0;\n      let all_images_num = images.length;\n      images.each(function () {\n        if (this.complete) {\n          loaded_images_counter++;\n        }\n      });\n      if (loaded_images_counter === all_images_num) {\n        clearInterval(timer);\n        init();\n      }\n    }, 100);\n  }\n\n  /**\n   * 获取光标坐标,如果是 touch 事件,只处理第一个\n   */\n  function getCursorCoords(event) {\n    let e = event || window.event;\n    let coords_data = e, //记录坐标的数据,默认为 event 本身,移动端的 touch 会修改\n      x, //x 轴\n      y; //y 轴\n\n    if (e[\"touches\"] !== undefined) {\n      if (e[\"touches\"].length > 0) {\n        coords_data = e[\"touches\"][0];\n      }\n    }\n\n    x = coords_data.clientX || coords_data.pageX;\n    y = coords_data.clientY || coords_data.pageY;\n\n    return { x: x, y: y };\n  }\n\n  /**\n   * 检查移动端触摸滑动的位置\n   */\n  function checkNewPositionLimit(new_position) {\n    if (-new_position > exzoom_img_ul_max_margin) {\n      //限制向右的范围\n      new_position = -exzoom_img_ul_max_margin;\n      imgIndex = 0; //向右超出范围的回到第一个\n    } else if (new_position > 0) {\n      //限制向左的范围\n      new_position = 0;\n    }\n    return new_position;\n  }\n\n  /**\n   * 绑定各种事件\n   */\n  function bindingEvent() {\n    //移动端大图区域的 touchend 事件\n    exzoom_img_ul.on(\"touchstart\", function (event) {\n      let coords = getCursorCoords(event);\n      startX = coords.x;\n      startY = coords.y;\n\n      let left = exzoom_img_ul.css(\"left\");\n      exzoom_img_ul_position = parseInt(left);\n\n      window.clearInterval(autoPlayInterval); //停止自动播放\n    });\n\n    //移动端大图区域的 touchmove 事件\n    exzoom_img_ul.on(\"touchmove\", function (event) {\n      let coords = getCursorCoords(event);\n      let new_position;\n      endX = coords.x;\n      endY = coords.y;\n\n      //只跟随光标移动\n      new_position = exzoom_img_ul_position + endX - startX;\n      new_position = checkNewPositionLimit(new_position);\n      exzoom_img_ul.css(\"left\", new_position);\n    });\n\n    //移动端大图区域的 touchend 事件\n    exzoom_img_ul.on(\"touchend\", function (event) {\n      //触屏滑动,根据移动方向按倍数对齐元素\n      console.log(endX < startX);\n      if (endX < startX) {\n        //向左滑动\n        moveRight();\n      } else if (endX > startX) {\n        //向右滑动\n        moveLeft();\n      }\n\n      autoPlay(); //恢复自动播放\n    });\n\n    //大屏幕在放大区域点击,判断向左还是向右移动\n    exzoom_zoom_outer.on(\"mousedown\", function (event) {\n      let coords = getCursorCoords(event);\n      startX = coords.x;\n      startY = coords.y;\n\n      let left = exzoom_img_ul.css(\"left\");\n      exzoom_img_ul_position = parseInt(left);\n    });\n\n    exzoom_zoom_outer.on(\"mouseup\", function (event) {\n      let offset = ele.offset();\n\n      if (startX - offset.left < boxWidth / 2) {\n        //在放大镜的左半部分点击\n        moveLeft();\n      } else if (startX - offset.left > boxWidth / 2) {\n        //在放大镜的右半部分点击\n        moveRight();\n      }\n    });\n\n    //进入 exzoom 停止自动播放\n    ele.on(\"mouseenter\", function () {\n      window.clearInterval(autoPlayInterval); //停止自动播放\n    });\n    //离开 exzoom 开始自动播放\n    ele.on(\"mouseleave\", function () {\n      autoPlay(); //恢复自动播放\n    });\n\n    //大屏幕进入大图区域\n    exzoom_zoom_outer.on(\"mouseenter\", function () {\n      exzoom_zoom.css(\"display\", \"block\");\n      exzoom_preview.css(\"display\", \"block\");\n    });\n\n    //大屏幕在大图区域移动\n    exzoom_zoom_outer.on(\"mousemove\", function (e) {\n      let width_limit = exzoom_zoom.width() / 2,\n        max_X = exzoom_zoom_outer.width() - width_limit,\n        max_Y = exzoom_zoom_outer.height() - width_limit,\n        current_X = e.pageX - exzoom_zoom_outer.offset().left,\n        current_Y = e.pageY - exzoom_zoom_outer.offset().top,\n        move_X = current_X - width_limit,\n        move_Y = current_Y - width_limit;\n\n      if (current_X <= width_limit) {\n        move_X = 0;\n      }\n      if (current_X >= max_X) {\n        move_X = max_X - width_limit;\n      }\n      if (current_Y <= width_limit) {\n        move_Y = 0;\n      }\n      if (current_Y >= max_Y) {\n        move_Y = max_Y - width_limit;\n      }\n      exzoom_zoom.css({ left: move_X + \"px\", top: move_Y + \"px\" });\n\n      exzoom_preview_img.css({\n        left: (-move_X * exzoom_preview.width()) / exzoom_zoom.width() + \"px\",\n        top: (-move_Y * exzoom_preview.width()) / exzoom_zoom.width() + \"px\",\n      });\n    });\n\n    //大屏幕离开大图区域\n    exzoom_zoom_outer.on(\"mouseleave\", function () {\n      exzoom_zoom.css(\"display\", \"none\");\n      exzoom_preview.css(\"display\", \"none\");\n    });\n\n    //大屏幕光宝进入放大预览区域\n    exzoom_preview.on(\"mouseenter\", function () {\n      exzoom_zoom.css(\"display\", \"none\");\n      exzoom_preview.css(\"display\", \"none\");\n    });\n\n    //缩略图导航\n    exzoom_next_btn.on(\"click\", function () {\n      moveRight();\n    });\n    exzoom_prev_btn.on(\"click\", function () {\n      moveLeft();\n    });\n\n    exzoom_navSpan.hover(function () {\n      imgIndex = $(this).index();\n      move(imgIndex);\n    });\n  }\n\n  /**\n   * 聚焦在导航图片上,左右移动都会调用\n   * @param direction: 方向,right | left,必填\n   */\n  function move(direction) {\n    if (typeof direction === \"undefined\") {\n      alert(\"exzoom 中的 move 函数的 direction 参数必填\");\n    }\n    //如果超出图片数量了,返回第一张\n    if (imgIndex > imgArr.length - 1) {\n      imgIndex = 0;\n    }\n\n    //设置高亮\n    exzoom_navSpan\n      .eq(imgIndex)\n      .addClass(navHightClass)\n      .siblings()\n      .removeClass(navHightClass);\n\n    //判断缩略图导航是否需要重新设置偏移量\n    let exzoom_nav_width = exzoom_nav.width();\n    let nav_item_width = g.navItemMargin + g.navWidth + g.navBorder * 2; // 单个导航元素的宽度\n    let new_nav_offset = 0;\n\n    //直接对比当前索引的图片占据的宽度和exzoom的宽度的差作为偏移量即可\n    let temp = nav_item_width * (imgIndex + 1);\n    if (temp > exzoom_nav_width) {\n      new_nav_offset = boxWidth - temp;\n    }\n\n    exzoom_nav_inner.css({\n      left: new_nav_offset,\n    });\n\n    //切换大图\n    let new_position = -boxWidth * imgIndex;\n    //在 animate 方法前先调用 stop() ,避免反应迟钝\n    new_position = checkNewPositionLimit(new_position);\n    exzoom_img_ul.stop().animate({ left: new_position }, 500);\n    //处理放大区域\n    previewImg(imgArr[imgIndex]);\n  }\n\n  /**\n   * 导航向右\n   */\n  function moveRight() {\n    imgIndex++; //先增加 index,后面判断范围\n    if (imgIndex > imgNum) {\n      imgIndex = imgNum;\n    }\n    move(\"right\");\n  }\n\n  /**\n   * 导航向左\n   */\n  function moveLeft() {\n    imgIndex--; //先减少 index,后面判断范围\n    if (imgIndex < 0) {\n      imgIndex = 0;\n    }\n    move(\"left\");\n  }\n\n  /**\n   * 自动播放\n   */\n  function autoPlay() {\n    if (g.autoPlay) {\n      autoPlayInterval = window.setInterval(function () {\n        if (imgIndex >= imgNum) {\n          imgIndex = 0;\n        }\n        imgIndex++;\n        move(\"right\");\n      }, g.autoPlayTimeout);\n    }\n  }\n\n  /**\n   * 预览图片\n   */\n  function previewImg(image_prop) {\n    if (image_prop === undefined) {\n      return;\n    }\n    exzoom_preview_img.attr(\"src\", image_prop[0]);\n\n    exzoom_main_img.attr(\"src\", image_prop[0]).css({\n      width: image_prop[3] + \"px\",\n      height: image_prop[4] + \"px\",\n    });\n    exzoom_zoom_outer.css({\n      width: image_prop[3] + \"px\",\n      height: image_prop[4] + \"px\",\n      top: image_prop[5] + \"px\",\n      left: image_prop[6] + \"px\",\n      position: \"relative\",\n    });\n    exzoom_zoom.css({\n      width: image_prop[7] + \"px\",\n      height: image_prop[7] + \"px\",\n    });\n    exzoom_preview_img.css({\n      width: image_prop[8] + \"px\",\n      height: image_prop[9] + \"px\",\n    });\n  }\n\n  /**\n   * 获得图片的真实尺寸\n   * @param url\n   * @param callback\n   */\n  function getImageSize(url, callback) {\n    let img = new Image();\n    img.src = url;\n\n    // 如果图片被缓存，则直接返回缓存数据\n    if (typeof callback !== \"undefined\") {\n      if (img.complete) {\n        callback(img.width, img.height);\n      } else {\n        // 完全加载完毕的事件\n        img.onload = function () {\n          callback(img.width, img.height);\n        };\n      }\n    } else {\n      return {\n        width: img.width,\n        height: img.height,\n      };\n    }\n  }\n\n  /**\n   * 计算图片属性\n   * @param image : jquery 对象或 图片url地址\n   * @param width : image 为图片url地址时指定宽度\n   * @param height : image 为图片url地址时指定高度\n   * @returns {Array}\n   */\n  function copute_image_prop(image, width, height) {\n    let src;\n    let res = [];\n\n    if (typeof image === \"string\") {\n      src = image;\n    } else {\n      src = image.attr(\"src\");\n      let size = getImageSize(src);\n      width = size.width;\n      height = size.height;\n    }\n\n    res[0] = src;\n    res[1] = width;\n    res[2] = height;\n    let img_scale = res[1] / res[2];\n\n    if (img_scale === 1) {\n      res[3] = boxHeight; //width\n      res[4] = boxHeight; //height\n      res[5] = 0; //top\n      res[6] = 0; //left\n      res[7] = boxHeight / 2;\n      res[8] = boxHeight * 2; //width\n      res[9] = boxHeight * 2; //height\n      exzoom_nav_inner.append(\n        `<span><img src=\"${src}\" width=\"${g.navWidth}\" height=\"${g.navHeight}\"/></span>`\n      );\n    } else if (img_scale > 1) {\n      res[3] = boxHeight; //width\n      res[4] = boxHeight / img_scale;\n      res[5] = (boxHeight - res[4]) / 2;\n      res[6] = 0; //left\n      res[7] = res[4] / 2;\n      res[8] = boxHeight * 2 * img_scale; //width\n      res[9] = boxHeight * 2; //height\n      let top = (g.navHeight - g.navWidth / img_scale) / 2;\n      exzoom_nav_inner.append(\n        `<span><img src=\"${src}\" width=\"${g.navWidth}\" style='top:${top}px;' /></span>`\n      );\n    } else if (img_scale < 1) {\n      res[3] = boxHeight * img_scale; //width\n      res[4] = boxHeight; //height\n      res[5] = 0; //top\n      res[6] = (boxHeight - res[3]) / 2;\n      res[7] = res[3] / 2;\n      res[8] = boxHeight * 2; //width\n      res[9] = (boxHeight * 2) / img_scale;\n      let top = (g.navWidth - g.navHeight * img_scale) / 2;\n      exzoom_nav_inner.append(\n        `<span><img src=\"${src}\" height=\"${g.navHeight}\" style=\"left:${top}px;\"/></span>`\n      );\n    }\n\n    return res;\n  }\n\n  // 闭包结束\n})(jQuery, window);\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","import \"./zoom/jquery.exzoom\";\r\n\r\njQuery(document).ready(function ($) {\r\n  $(document).ready(function () {\r\n    $(\"#exzoom\").exzoom({\r\n      // thumbnail nav options\r\n      navWidth: 120,\r\n      navHeight: 120,\r\n      navItemNum: 5,\r\n      navItemMargin: 7,\r\n      navBorder: 1,\r\n\r\n      // autoplay\r\n      autoPlay: true,\r\n\r\n      // autoplay interval in milliseconds\r\n      autoPlayTimeout: 3000,\r\n    });\r\n  });\r\n});\r\n"],"names":["$","window","ele","exzoom_img_box","boxWidth","boxHeight","exzoom_img_ul_outer","exzoom_img_ul","exzoom_img_ul_position","exzoom_img_ul_width","exzoom_img_ul_max_margin","exzoom_nav","exzoom_nav_inner","navHightClass","exzoom_navSpan","navHeightWithBorder","images","exzoom_prev_btn","exzoom_next_btn","imgNum","imgIndex","imgArr","exzoom_zoom","exzoom_main_img","exzoom_zoom_outer","exzoom_preview","exzoom_preview_img","autoPlayInterval","startX","endX","g","defaults","navWidth","navHeight","navItemNum","navItemMargin","navBorder","autoPlay","autoPlayTimeout","methods","init","options","opts","extend","this","find","outerWidth","length","timer","setInterval","loaded_images_counter","all_images_num","each","complete","clearInterval","checkLoadedAllImages","prev","moveLeft","next","moveRight","setImg","url","arguments","getImageSize","width","height","attr","remove","append","previewImg","copute_image_prop","i","eq","console","log","li","css","exzoom_navWidth","exzoom_nav_innerWidth","addClass","left","on","event","coords","getCursorCoords","x","y","parseInt","new_position","checkNewPositionLimit","offset","e","width_limit","max_X","max_Y","current_X","pageX","current_Y","pageY","top","move_X","move_Y","hover","move","index","coords_data","undefined","clientX","clientY","direction","alert","siblings","removeClass","exzoom_nav_width","new_nav_offset","temp","stop","animate","image_prop","position","callback","img","Image","src","onload","image","res","size","img_scale","fn","exzoom","method","apply","error","Array","prototype","slice","call","jQuery","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","n","getter","__esModule","d","a","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","hasOwnProperty","document","ready"],"sourceRoot":""}